// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectTags renders 1`] = `
<ProjectTags
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
>
  <SideEffect(DocumentTitle)
    title="Sentry"
  >
    <DocumentTitle
      title="Sentry"
    >
      <div>
        <SettingsPageHeading
          title="Tags"
        >
          <Wrapper>
            <div
              className="css-foidy-Wrapper css-1wp86lr0"
            >
              <Flex
                align="center"
              >
                <StyledFlex>
                  <div
                    className="css-1qt63sy-StyledFlex css-9xhpuv1"
                  >
                    <Title>
                      <div
                        className="css-zmdcxu-Title css-1wp86lr1"
                      >
                        Tags
                      </div>
                    </Title>
                  </div>
                </StyledFlex>
              </Flex>
            </div>
          </Wrapper>
        </SettingsPageHeading>
        <TextBlock>
          <Component
            className="css-ms59cf-TextBlock css-1gwew8k0"
          >
            <div
              className="css-ms59cf-TextBlock css-1gwew8k0"
            >
              <span
                key="5"
              >
                <span
                  key="0"
                >
                  Each event in Sentry may be annotated with various tags (key and value pairs).
          Learn how to 
                </span>
                <ExternalLink
                  href="https://docs.sentry.io/hosted/learn/context/"
                  key="2"
                  rel="noreferrer noopener"
                  target="_blank"
                >
                  <a
                    href="https://docs.sentry.io/hosted/learn/context/"
                    rel="noreferrer noopener"
                    target="_blank"
                  >
                    <span
                      key="1"
                    >
                      add custom tags
                    </span>
                  </a>
                </ExternalLink>
                <span
                  key="3"
                >
                  .
                </span>
              </span>
            </div>
          </Component>
        </TextBlock>
        <Panel>
          <StyledPanel>
            <div
              className="css-wfa8ap-StyledPanel css-5bw71w0"
            >
              <PanelHeader>
                <StyledPanelHeader>
                  <Component
                    className="css-kf498j-StyledPanelHeader css-9rpnl60"
                  >
                    <Flex
                      align="center"
                      className="css-kf498j-StyledPanelHeader css-9rpnl60"
                      justify="space-between"
                    >
                      <StyledFlex
                        className="css-kf498j-StyledPanelHeader css-9rpnl60"
                      >
                        <div
                          className="css-9rpnl60 css-u1nog2-StyledFlex css-9xhpuv1"
                        >
                          <Flex>
                            <StyledFlex>
                              <div
                                className="css-ud6gq6-StyledFlex css-9xhpuv1"
                              >
                                <Box
                                  flex="1"
                                >
                                  <StyledBox>
                                    <div
                                      className="css-fsjb0e-StyledBox css-9xhpuv0"
                                    >
                                      Tags
                                    </div>
                                  </StyledBox>
                                </Box>
                              </div>
                            </StyledFlex>
                          </Flex>
                        </div>
                      </StyledFlex>
                    </Flex>
                  </Component>
                </StyledPanelHeader>
              </PanelHeader>
              <PanelBody
                direction="column"
                disablePadding={true}
                flex={false}
              >
                <div
                  className=""
                >
                  <PanelItem
                    align="center"
                    className="ref-tag-row"
                    key="browser"
                    p={0}
                  >
                    <StyledPanelItem
                      align="center"
                      className="ref-tag-row"
                      p={0}
                    >
                      <Flex
                        align="center"
                        className="ref-tag-row css-g2y9ad-StyledPanelItem css-ggxnv80"
                        p={0}
                      >
                        <StyledFlex
                          className="ref-tag-row css-g2y9ad-StyledPanelItem css-ggxnv80"
                        >
                          <div
                            className="ref-tag-row css-ggxnv80 css-1vtnvd9-StyledFlex css-9xhpuv1"
                          >
                            <Box
                              align="flex-end"
                              flex="1"
                              p={2}
                            >
                              <StyledBox
                                align="flex-end"
                              >
                                <div
                                  className="css-f981yk-StyledBox css-9xhpuv0"
                                >
                                  <span>
                                    Browser
                                  </span>
                                  <Description>
                                    <span
                                      className="css-1qgh7d2-Description css-18t7crd0"
                                    >
                                      browser
                                    </span>
                                  </Description>
                                </div>
                              </StyledBox>
                            </Box>
                            <Flex
                              align="center"
                              p={2}
                            >
                              <StyledFlex>
                                <div
                                  className="css-1287js5-StyledFlex css-9xhpuv1"
                                >
                                  <LinkWithConfirmation
                                    className="btn btn-sm btn-default"
                                    disabled={false}
                                    message="Are you sure you want to remove this tag?"
                                    onConfirm={[Function]}
                                    title="Remove tag?"
                                  >
                                    <Confirm
                                      cancelText="Cancel"
                                      confirmText="Confirm"
                                      disabled={false}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      priority="primary"
                                    >
                                      <a
                                        className="btn btn-sm btn-default"
                                        disabled={false}
                                        onClick={[Function]}
                                        title="Remove tag?"
                                      >
                                        <span
                                          className="icon icon-trash"
                                        />
                                      </a>
                                      <Modal
                                        animation={false}
                                        autoFocus={true}
                                        backdrop={true}
                                        bsClass="modal"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop={true}
                                          backdropClassName="modal-backdrop"
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        />
                                      </Modal>
                                    </Confirm>
                                  </LinkWithConfirmation>
                                </div>
                              </StyledFlex>
                            </Flex>
                          </div>
                        </StyledFlex>
                      </Flex>
                    </StyledPanelItem>
                  </PanelItem>
                  <PanelItem
                    align="center"
                    className="ref-tag-row"
                    key="device"
                    p={0}
                  >
                    <StyledPanelItem
                      align="center"
                      className="ref-tag-row"
                      p={0}
                    >
                      <Flex
                        align="center"
                        className="ref-tag-row css-g2y9ad-StyledPanelItem css-ggxnv80"
                        p={0}
                      >
                        <StyledFlex
                          className="ref-tag-row css-g2y9ad-StyledPanelItem css-ggxnv80"
                        >
                          <div
                            className="ref-tag-row css-ggxnv80 css-1vtnvd9-StyledFlex css-9xhpuv1"
                          >
                            <Box
                              align="flex-end"
                              flex="1"
                              p={2}
                            >
                              <StyledBox
                                align="flex-end"
                              >
                                <div
                                  className="css-f981yk-StyledBox css-9xhpuv0"
                                >
                                  <span>
                                    Device
                                  </span>
                                  <Description>
                                    <span
                                      className="css-1qgh7d2-Description css-18t7crd0"
                                    >
                                      device
                                    </span>
                                  </Description>
                                </div>
                              </StyledBox>
                            </Box>
                            <Flex
                              align="center"
                              p={2}
                            >
                              <StyledFlex>
                                <div
                                  className="css-1287js5-StyledFlex css-9xhpuv1"
                                >
                                  <LinkWithConfirmation
                                    className="btn btn-sm btn-default"
                                    disabled={false}
                                    message="Are you sure you want to remove this tag?"
                                    onConfirm={[Function]}
                                    title="Remove tag?"
                                  >
                                    <Confirm
                                      cancelText="Cancel"
                                      confirmText="Confirm"
                                      disabled={false}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      priority="primary"
                                    >
                                      <a
                                        className="btn btn-sm btn-default"
                                        disabled={false}
                                        onClick={[Function]}
                                        title="Remove tag?"
                                      >
                                        <span
                                          className="icon icon-trash"
                                        />
                                      </a>
                                      <Modal
                                        animation={false}
                                        autoFocus={true}
                                        backdrop={true}
                                        bsClass="modal"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop={true}
                                          backdropClassName="modal-backdrop"
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        />
                                      </Modal>
                                    </Confirm>
                                  </LinkWithConfirmation>
                                </div>
                              </StyledFlex>
                            </Flex>
                          </div>
                        </StyledFlex>
                      </Flex>
                    </StyledPanelItem>
                  </PanelItem>
                  <PanelItem
                    align="center"
                    className="ref-tag-row"
                    key="url"
                    p={0}
                  >
                    <StyledPanelItem
                      align="center"
                      className="ref-tag-row"
                      p={0}
                    >
                      <Flex
                        align="center"
                        className="ref-tag-row css-g2y9ad-StyledPanelItem css-ggxnv80"
                        p={0}
                      >
                        <StyledFlex
                          className="ref-tag-row css-g2y9ad-StyledPanelItem css-ggxnv80"
                        >
                          <div
                            className="ref-tag-row css-ggxnv80 css-1vtnvd9-StyledFlex css-9xhpuv1"
                          >
                            <Box
                              align="flex-end"
                              flex="1"
                              p={2}
                            >
                              <StyledBox
                                align="flex-end"
                              >
                                <div
                                  className="css-f981yk-StyledBox css-9xhpuv0"
                                >
                                  <span>
                                    URL
                                  </span>
                                  <Description>
                                    <span
                                      className="css-1qgh7d2-Description css-18t7crd0"
                                    >
                                      url
                                    </span>
                                  </Description>
                                </div>
                              </StyledBox>
                            </Box>
                            <Flex
                              align="center"
                              p={2}
                            >
                              <StyledFlex>
                                <div
                                  className="css-1287js5-StyledFlex css-9xhpuv1"
                                >
                                  <LinkWithConfirmation
                                    className="btn btn-sm btn-default"
                                    disabled={false}
                                    message="Are you sure you want to remove this tag?"
                                    onConfirm={[Function]}
                                    title="Remove tag?"
                                  >
                                    <Confirm
                                      cancelText="Cancel"
                                      confirmText="Confirm"
                                      disabled={false}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      priority="primary"
                                    >
                                      <a
                                        className="btn btn-sm btn-default"
                                        disabled={false}
                                        onClick={[Function]}
                                        title="Remove tag?"
                                      >
                                        <span
                                          className="icon icon-trash"
                                        />
                                      </a>
                                      <Modal
                                        animation={false}
                                        autoFocus={true}
                                        backdrop={true}
                                        bsClass="modal"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop={true}
                                          backdropClassName="modal-backdrop"
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        />
                                      </Modal>
                                    </Confirm>
                                  </LinkWithConfirmation>
                                </div>
                              </StyledFlex>
                            </Flex>
                          </div>
                        </StyledFlex>
                      </Flex>
                    </StyledPanelItem>
                  </PanelItem>
                  <PanelItem
                    align="center"
                    className="ref-tag-row"
                    key="environment"
                    p={0}
                  >
                    <StyledPanelItem
                      align="center"
                      className="ref-tag-row"
                      p={0}
                    >
                      <Flex
                        align="center"
                        className="ref-tag-row css-g2y9ad-StyledPanelItem css-ggxnv80"
                        p={0}
                      >
                        <StyledFlex
                          className="ref-tag-row css-g2y9ad-StyledPanelItem css-ggxnv80"
                        >
                          <div
                            className="ref-tag-row css-ggxnv80 css-1vtnvd9-StyledFlex css-9xhpuv1"
                          >
                            <Box
                              align="flex-end"
                              flex="1"
                              p={2}
                            >
                              <StyledBox
                                align="flex-end"
                              >
                                <div
                                  className="css-f981yk-StyledBox css-9xhpuv0"
                                >
                                  <span>
                                    Environment
                                  </span>
                                  <Description>
                                    <span
                                      className="css-1qgh7d2-Description css-18t7crd0"
                                    >
                                      environment
                                    </span>
                                  </Description>
                                </div>
                              </StyledBox>
                            </Box>
                            <Flex
                              align="center"
                              p={2}
                            >
                              <StyledFlex>
                                <div
                                  className="css-1287js5-StyledFlex css-9xhpuv1"
                                >
                                  <Tooltip
                                    title="This tag cannot be deleted."
                                  >
                                    <span
                                      className="tip"
                                      title="This tag cannot be deleted."
                                    >
                                      <LinkWithConfirmation
                                        className="btn btn-sm btn-default"
                                        disabled={true}
                                        message="Are you sure you want to remove this tag?"
                                        onConfirm={[Function]}
                                        title="Remove tag?"
                                      >
                                        <Confirm
                                          cancelText="Cancel"
                                          confirmText="Confirm"
                                          disabled={true}
                                          message="Are you sure you want to remove this tag?"
                                          onConfirm={[Function]}
                                          priority="primary"
                                        >
                                          <a
                                            className="btn btn-sm btn-default disabled"
                                            disabled={true}
                                            onClick={[Function]}
                                            title="Remove tag?"
                                          >
                                            <span
                                              className="icon icon-trash"
                                            />
                                          </a>
                                          <Modal
                                            animation={false}
                                            autoFocus={true}
                                            backdrop={true}
                                            bsClass="modal"
                                            dialogComponentClass={[Function]}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          >
                                            <Modal
                                              autoFocus={true}
                                              backdrop={true}
                                              backdropClassName="modal-backdrop"
                                              containerClassName="modal-open"
                                              enforceFocus={true}
                                              keyboard={true}
                                              manager={
                                                ModalManager {
                                                  "add": [Function],
                                                  "containers": Array [],
                                                  "data": Array [],
                                                  "handleContainerOverflow": true,
                                                  "hideSiblingNodes": true,
                                                  "isTopModal": [Function],
                                                  "modals": Array [],
                                                  "remove": [Function],
                                                }
                                              }
                                              onEntering={[Function]}
                                              onExited={[Function]}
                                              onHide={[Function]}
                                              renderBackdrop={[Function]}
                                              restoreFocus={true}
                                              show={false}
                                            />
                                          </Modal>
                                        </Confirm>
                                      </LinkWithConfirmation>
                                    </span>
                                  </Tooltip>
                                </div>
                              </StyledFlex>
                            </Flex>
                          </div>
                        </StyledFlex>
                      </Flex>
                    </StyledPanelItem>
                  </PanelItem>
                </div>
              </PanelBody>
            </div>
          </StyledPanel>
        </Panel>
      </div>
    </DocumentTitle>
  </SideEffect(DocumentTitle)>
</ProjectTags>
`;
